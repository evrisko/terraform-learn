# set hostname
sudo hostnamectl set-hostname ansible-master

# install ansible
yum -y install python-pip
pip install ansible
ansible --version

#Create ansible config file
mkdir ansible
cd ansible
touch ansible.cfg hosts

cat ansible.cfg
[defaults]
host_key_checking          = false
inventory                  = ./hosts
interpreter_python         = auto_legacy_silent

[ec2-user@ansible-master ansible]$ cat hosts
[stage]
172.31.47.153     ansible_hosts=172.31.47.153
172.31.44.235     ansible_hosts=172.31.44.235

[stage:vars]
ansible_ssh_private_key_file=/home/ec2-user/.ssh/ansible-client-key.pem

[prod]
ip-172-31-35-7.eu-central-1.compute.internal    ansible_hosts=172.31.35.7
ip-172-31-39-254.eu-central-1.compute.internal  ansible_hosts=172.31.39.254

[prod:vars]
ansible_ssh_private_key_file=/home/ec2-user/.ssh/ansible-client-key2.pem

[all_ec2:children]
stage
prod

[all_ec2:vars]
ansible_users=ec2-user

# ad-hoc commamd

ansible all -m ping
ansible stage -m setup
ansible stage -m shell -a "uptime"
ansible all -m command -a "uname -a"
ansible prod -m shell -a "free -m"

# copy file to dst
touch testfile
ansible all -m copy -a "src=testfile dest=testfile
ansible all -m shell -a "ls"

# delete files
ansible all -m file -a "path=./testfile state=absent" -b

# download from remote machines
ansible all -m get_url -a "url=https://releases.hashicorp.com/terraform/0.12.23/terraform_0.12.23_linux_amd64.zip dest=/home/ec2-user/" -b

# installing tool
ansible all -m yum -a "name=whois state=installed" -b
ansible all -m yum -a "name=whois state=removed" -b

ansible all -m uri -a "url=http://tut.by"
ansible all -m uri -a "url=http://tut.by return_content=yes"

ansible all -m yum -a "name=httpd state=latest" -b
ansible all -m service -a "name=httpd state=started enabled=yes" -b
ansible all -m yum -a "name=httpd state=removed" -b

ansible prod -m shell -a "ls -la" -vvv

# DOC
ansible-doc -l | grep ec2
