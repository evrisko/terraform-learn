# set hostname
sudo hostnamectl set-hostname ansible-master

# install ansible
yum -y install python-pip
pip install ansible
ansible --version

#Create ansible config file
mkdir ansible
cd ansible
touch ansible.cfg hosts

cat ansible.cfg
[defaults]
host_key_checking          = false
inventory                  = ./hosts
interpreter_python         = auto_legacy_silent

[ec2-user@ansible-master ansible]$ cat hosts
[stage]
172.31.47.153     ansible_hosts=172.31.47.153
172.31.44.235     ansible_hosts=172.31.44.235

[stage:vars]
ansible_ssh_private_key_file=/home/ec2-user/.ssh/ansible-client-key.pem

[prod]
ip-172-31-35-7.eu-central-1.compute.internal    ansible_hosts=172.31.35.7
ip-172-31-39-254.eu-central-1.compute.internal  ansible_hosts=172.31.39.254

[prod:vars]
ansible_ssh_private_key_file=/home/ec2-user/.ssh/ansible-client-key2.pem

[all_ec2:children]
stage
prod

[all_ec2:vars]
ansible_users=ec2-user

# ad-hoc commamd

ansible all -m ping
ansible stage -m setup
ansible stage -m shell -a "uptime"
ansible all -m command -a "uname -a"
ansible prod -m shell -a "free -m"

# copy file to dst
touch testfile
ansible all -m copy -a "src=testfile dest=testfile
ansible all -m shell -a "ls"

# delete files
ansible all -m file -a "path=./testfile state=absent" -b

# download from remote machines
ansible all -m get_url -a "url=https://releases.hashicorp.com/terraform/0.12.23/terraform_0.12.23_linux_amd64.zip dest=/home/ec2-user/" -b

# installing tool
ansible all -m yum -a "name=whois state=installed" -b
ansible all -m yum -a "name=whois state=removed" -b

ansible all -m uri -a "url=http://tut.by"
ansible all -m uri -a "url=http://tut.by return_content=yes"

ansible all -m yum -a "name=httpd state=latest" -b
ansible all -m service -a "name=httpd state=started enabled=yes" -b
ansible all -m yum -a "name=httpd state=removed" -b

ansible prod -m shell -a "ls -la" -vvv

# DOC
ansible-doc -l | grep ec2

# Ansible vault for encryption
ansible-vault encrypt playbook12.yml
ansible-vault decrypt playbook12.yml
ansible-vault view playbook12.yml
ansible-vault rekey playbook12.yml
ansible-vault create mysecret.txt

ansible-playbook playbook12.yml --ask-vault-pass
ansible-playbook playbook12.yml --vault-password-file <file_with_path>

#Create encryption string and using
1. echo -n "12321sefl3495j(*&U" | ansible-vault encrypt_string
2. input password for encrypt string
3. copy
!vault |
          $ANSIBLE_VAULT;1.1;AES256
          61646232396136636162333165316565356361386130353137623762393265383934303530646634
          3736373031633839326138333330616231353662643335360a656664306130623235323366663132
          38613161326562623365363831323231623933323339303332346339616366633330323639323835
          3061383131396330310a343535646565316465393633366366623134616464353162396333353333
          33616339323930666661616234336338376630396133376364616361333239663036
to the playbook
4. Use --ask-vault-pass when launch playbook
